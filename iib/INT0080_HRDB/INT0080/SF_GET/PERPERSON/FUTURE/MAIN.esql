BROKER SCHEMA INT0080.SF_GET.PERPERSON.FUTURE
-- $MQSI_VERSION=$Id$MQSI$
-- $MQSI ESQL=$URL$MQSI$

-- Working tables
DECLARE TBL_SYNCH_LOG CONSTANT CHARACTER 'synchODdataLog';

CREATE COMPUTE MODULE GetPerPersonFutureList
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE countReq	INT 1;
		DECLARE sqlc 		CHAR;
		DECLARE vHost 		CHAR;
		DECLARE trigList	ROW;
		
		-- Extract source trigger list
		SET trigList.list.parm[] = EVAL('LIST{' || InputRoot.XMLNSC.TriggerMsg.TriggerId || '}');
					
		-- Clean up synch table
		SET sqlc = 'DELETE FROM ' || TBL_SYNCH_LOG || ' WHERE TYPE = ''FutureEmployee''';	
		PASSTHRU(sqlc);
		PASSTHRU('COMMIT;');		
		
		-- Get URL
		SET vHost = Environment.Conn.URL; 	
		
		-- Set Environment start values
		SET Environment.SF.Meta.hasMore 	= true;
		SET Environment.SF.Meta.firstRun 	= true;
		SET Environment.SF.Meta.syncTime    = CURRENT_TIMESTAMP; 
						
		WHILE (Environment.SF.Meta.hasMore = true AND countReq <= 100) DO
		
			SET OutputRoot.Properties.CodedCharSetId 			= 1208;						
			SET OutputRoot.HTTPRequestHeader."Authorization" = Environment.Conn.AuthHeader;	
			
			-- If first run, then run query, else run queryMore
			IF Environment.SF.Meta.firstRun = true THEN
				SET Environment.SF.Meta.RequestURL = GetQPerPersonFutureList(vHost);
				SET OutputLocalEnvironment.Destination.HTTP.RequestURL = GetQPerPersonFutureList(vHost);				
			ELSEIF Environment.SF.Meta.firstRun = false THEN
				SET OutputLocalEnvironment.Destination.HTTP.RequestURL = Environment.SF.Meta.Next;		
			END IF;
			
			PROPAGATE TO TERMINAL 'out';
		
			SET countReq = countReq + 1;	
		END WHILE;	
									
		RETURN FALSE;
	END;

	CREATE FUNCTION GetQPerPersonFutureList(IN vHost CHAR) RETURNS CHAR BEGIN			 		
		
		DECLARE vObject CHAR 'PerPerson';
		DECLARE vFilter CHAR '$filter=';
		DECLARE vSelect CHAR '$select=';
		DECLARE vExpand CHAR '$expand=';
		DECLARE vPaging CHAR 'paging=snapshot';
		DECLARE vCustom CHAR 'customPageSize=1000';		
		DECLARE vFormat CHAR '$format=json';	
		DECLARE startDateGt CHAR;
		DECLARE startDateLt CHAR;
		DECLARE futureDate CHAR;
		
		-- Todays date (greater than) to get list of future employees
		SET startDateGt = CAST(CURRENT_DATE AS CHAR FORMAT 'yyyy-MM-dd');

		-- Filter
		SET vFilter = vFilter || 'employmentNav/startDate gt ' || '''' || startDateGt || '''';
		
		-- Select
		SET vSelect = vSelect || 'personIdExternal,';
		SET vSelect = vSelect || 'customString10,';						
		SET vSelect = vSelect || 'employmentNav/startDate,';
		SET vSelect = vSelect || 'employmentNav/endDate,';
		SET vSelect = vSelect || 'employmentNav/seniorityDate,';
		SET vSelect = vSelect || 'employmentNav/lastDateWorked,';
				
		-- Expand	
		SET vExpand = vExpand || 'employmentNav';
			
		
		RETURN vHost || vObject || '?' || vFilter || '&' || vSelect || '&' || vExpand || '&' || vCustom || '&' || vFormat  || '&' || vPaging;
		
	END;
END MODULE;

CREATE COMPUTE MODULE GetSinglePerPersonFuture
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE vHost CHAR;
		DECLARE resultCount INT;
		DECLARE inRef REFERENCE TO InputRoot.JSON.Data.d.results.Item;
		
		SET resultCount = CARDINALITY(InputRoot.JSON.Data.d.results.Item[]);
		
		IF (resultCount > 0) THEN
			WHILE LASTMOVE(inRef) DO
				--DECLARE vIgnore BOOLEAN FALSE;
				DECLARE vEmpAr INT 1;
				DECLARE workerType CHAR;
				DECLARE employmentType CHAR;						
	
				-- Incase of error then easier to identify which row that was in error
				SET Environment.Initials = inRef.customString10;
				SET Environment.personIdExternal = inRef.personIdExternal;
				
				-- Get correct employmentNav array		
				CALL GetEmploymentNav(inRef, vEmpAr);
				
				-- Get URL
				SET vHost = Environment.Conn.URL;
				
				SET OutputRoot.Properties.CodedCharSetId = 1208;						
				SET OutputRoot.HTTPRequestHeader."Authorization" = Environment.Conn.AuthHeader;	
				
				SET OutputLocalEnvironment.Destination.HTTP.RequestURL = GetSingleQPerPersonFuture(vHost, inRef.personIdExternal, inRef.employmentNav.results.Item[vEmpAr].startDate);		
				
				PROPAGATE TO TERMINAL 'out';
								
				MOVE inRef NEXTSIBLING REPEAT TYPE NAME;	
			END WHILE;
			
			SET OutputRoot.Properties = InputRoot.Properties;
			SET OutputRoot.XMLNSC.EmployeeFuture.Info = CAST(resultCount AS CHARACTER) || ' potential future employees sent successfully to queue INT0080.PROCESS.EMPLOYEE.FUTURE';
			PROPAGATE TO TERMINAL 'out2';						
		ELSE
			SET OutputRoot.Properties = InputRoot.Properties;
			SET OutputRoot.XMLNSC.EmployeeFuture.Info = 'No future hires found in SuccessFactors.';			
			SET OutputLocalEnvironment.MetaData.Status = 'Filtered';
			PROPAGATE TO TERMINAL 'out1';
		END IF;
								
		RETURN FALSE;
	END;

	CREATE PROCEDURE GetEmploymentNav(IN inRef REFERENCE, INOUT vEmpAr INT) BEGIN
			DECLARE nbrEmpNav INT;
			DECLARE tmpStartDate TIMESTAMP;
			DECLARE vStartDate TIMESTAMP;
			DECLARE vEndDate TIMESTAMP;
			DECLARE i INT 1;
								
			SET nbrEmpNav 	= CARDINALITY(inRef.employmentNav.results.Item[]);

			-- Get active employmentNav
			IF (nbrEmpNav > 1) THEN		
				DECLARE nullEndDate BOOLEAN FALSE;
				
				SET tmpStartDate = CAST('1970-01-01 00:00:00' AS TIMESTAMP FORMAT 'yyyy-MM-dd HH:mm:ss');
				
				WHILE(nbrEmpNav >= i) DO

					SET vStartDate 	= INT0080.COMMON.GetSFTimeStamp(inRef.employmentNav.results.Item[i].startDate);
					SET vEndDate 	= INT0080.COMMON.GetSFTimeStamp(inRef.employmentNav.results.Item[i].endDate);
																	
					-- If employmentNav/endDate is null, then we assume this is the active record, even if another employmentNav/startDate is newer
					IF (vEndDate IS NULL) THEN
						SET nullEndDate = TRUE;
						SET vEmpAr = i;
					END IF;							
					
					-- employmentNav/startDate must be > than set start date(1970-01-01 00:00:00) or previous employmentNav/startDate
					IF ((vStartDate > tmpStartDate) AND nullEndDate = FALSE) THEN
						SET tmpStartDate = vStartDate;																
						SET vEmpAr = i;
					END IF;
										
					SET i = i +1;	
				END WHILE;								
			END IF;		
	END;

	CREATE FUNCTION GetSingleQPerPersonFuture(IN vHost CHAR, IN personIdExternal CHAR, IN asOfDate CHAR) RETURNS CHAR BEGIN			 		
		DECLARE vObject CHAR 'PerPerson';
		DECLARE vFilter CHAR '$filter=';
		DECLARE vSelect CHAR '$select=';
		DECLARE vExpand CHAR '$expand=';
		DECLARE vPaging CHAR 'paging=snapshot';
		DECLARE vCustom CHAR 'customPageSize=1000';		
		DECLARE vFormat CHAR '$format=json';
		DECLARE vAsOfDate CHAR 'asOfDate=';	
		
		-- Filter
		SET vFilter = vFilter || 'personIdExternal eq ' || '''' || personIdExternal || '''';
		
		-- Select
		SET vSelect = vSelect || 'personIdExternal,';
		SET vSelect = vSelect || 'customString10,';
		SET vSelect = vSelect || 'personalInfoNav/displayName,';
		SET vSelect = vSelect || 'personalInfoNav/lastName,';
		SET vSelect = vSelect || 'emailNav/emailAddress,';
		SET vSelect = vSelect || 'emailNav/emailTypeNav/externalCode,';
		SET vSelect = vSelect || 'phoneNav/countryCode,';
		SET vSelect = vSelect || 'phoneNav/phoneNumber,';
		SET vSelect = vSelect || 'phoneNav/phoneTypeNav/externalCode,';									
		SET vSelect = vSelect || 'employmentNav/startDate,';
		SET vSelect = vSelect || 'employmentNav/endDate,';
		SET vSelect = vSelect || 'employmentNav/userId,';
		SET vSelect = vSelect || 'employmentNav/seniorityDate,';
		SET vSelect = vSelect || 'employmentNav/originalStartDate,';
		SET vSelect = vSelect || 'employmentNav/lastDateWorked,';
		SET vSelect = vSelect || 'employmentNav/payrollEndDate,';
		SET vSelect = vSelect || 'employmentNav/empGlobalAssignmentNav/userId,';
		SET vSelect = vSelect || 'employmentNav/empGlobalAssignmentNav/endDate,';
		SET vSelect = vSelect || 'employmentNav/empGlobalAssignmentNav/startDate,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/endDate,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/startDate,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/department,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/division,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/businessUnit,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/company,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/position,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/costCenter,';	
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/payGrade,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/payGradeNav/name,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/standardHours,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/workingDaysPerWeek,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/fte,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/location,';					
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/employeeClassNav/externalCode,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/employeeClassNav/picklistLabels/locale,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/employeeClassNav/picklistLabels/label,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/employmentTypeNav/externalCode,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/employmentTypeNav/picklistLabels/locale,';		
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/employmentTypeNav/picklistLabels/label,';		
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/customString4Nav/externalName,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/eventNav/picklistLabels/locale,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/eventNav/picklistLabels/label,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/eventReasonNav/name,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/managerUserNav/userId,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/emplStatusNav/externalCode,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/emplStatusNav/picklistLabels/locale,';		
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/emplStatusNav/picklistLabels/label,';		
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionEntryDate,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/locationNav/externalCode,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/locationNav/name,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/cust_jobLevel,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/externalName_defaultValue,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/cust_orgUnitLevel1,';			
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/cust_orgUnitLevel2,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/cust_orgUnitLevel3,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/cust_orgUnitLevel4,';			
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/cust_orgUnitLevel5,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/cust_orgUnitLevel6,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/parentPosition/code,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/positionMatrixRelationship/relatedPosition,';
		SET vSelect = vSelect || 'employmentNav/jobInfoNav/positionNav/positionMatrixRelationship/matrixRelationshipType,';			
		SET vSelect = vSelect || 'employmentNav/userNav/custom01,';
		SET vSelect = vSelect || 'employmentNav/userNav/custom02,';
		SET vSelect = vSelect || 'employmentNav/userNav/dateOfBirth,';
		SET vSelect = vSelect || 'employmentNav/userNav/teamMembersSize,';
 		SET vSelect = vSelect || 'employmentNav/workOrderNav/workerType,';
		SET vSelect = vSelect || 'employmentNav/workOrderNav/workerTypeNav/label_defaultValue,';

		-- Expand
		SET vExpand = vExpand || 'emailNav/emailTypeNav,';
		SET vExpand = vExpand || 'phoneNav/phoneTypeNav,';		
		SET vExpand = vExpand || 'personalInfoNav/salutationNav,';
		SET vExpand = vExpand || 'personalInfoNav/nativePreferredLangNav,';
		SET vExpand = vExpand || 'nationalIdNav,';
		SET vExpand = vExpand || 'homeAddressNavDEFLT/stateNav,';		
		SET vExpand = vExpand || 'employmentNav/empGlobalAssignmentNav,';
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/employeeClassNav/picklistLabels,';		
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/employmentTypeNav/picklistLabels,';
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/customString4Nav,';	
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/eventReasonNav,';
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/eventNav/picklistLabels,';
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/emplStatusNav/picklistLabels,';
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/locationNav,';
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/managerUserNav,';
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/payGradeNav,';	
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/positionNav/positionMatrixRelationship,';
		SET vExpand = vExpand || 'employmentNav/jobInfoNav/positionNav/parentPosition,';
		SET vExpand = vExpand || 'employmentNav/userNav,';
		SET vExpand = vExpand || 'employmentNav/workOrderNav,';
		SET vExpand = vExpand || 'employmentNav/workOrderNav/workerTypeNav';	

		-- asOfDate
		SET vAsOfDate = vAsOfDate || CAST(INT0080.COMMON.GetSFTimeStamp(asOfDate) AS CHAR FORMAT 'yyyy-MM-dd');
		
		RETURN vHost || vObject || '?' || vFilter || '&' || vSelect || '&' || vExpand || '&' || vCustom || '&' || vFormat  || '&' || vPaging || '&' || vAsOfDate;
		
	END;
END MODULE;

CREATE COMPUTE MODULE PropagateJsonMessage
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN

		SET OutputRoot.Properties = InputRoot.Properties;
		
		-- To be able to set the same lastSyncDate for all rows updated by one trigger msg
		SET OutputRoot.MQRFH2.usr.syncTime = Environment.SF.Meta.syncTime;		
		
		-- Propagate message
		CREATE LASTCHILD OF OutputRoot DOMAIN 'JSON' NAME 'JSON';
		SET OutputRoot.JSON = InputRoot.JSON;
		
		RETURN TRUE;
	END;
END MODULE;
