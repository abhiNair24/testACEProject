BROKER SCHEMA INT0080.SF_GET.FO_LOCATION
-- $MQSI_VERSION=$Id$MQSI$
-- $MQSI ESQL=$URL$MQSI$

CREATE COMPUTE MODULE GetFOLocation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE countReq	INT 1;
		DECLARE sqlc 		CHAR;
		DECLARE vHost 		CHAR;
		DECLARE trigList	ROW;
		
		-- Extract source trigger list
		SET trigList.list.parm[] = EVAL('LIST{' || InputRoot.XMLNSC.TriggerMsg.TriggerId || '}');
		
		-- Get URL
		SET vHost = Environment.Conn.URL; 

		-- Set Environment start values
		SET Environment.SF.Meta.hasMore 	= true;
		SET Environment.SF.Meta.firstRun 	= true;
						
		WHILE (Environment.SF.Meta.hasMore = true AND countReq <= 100) DO
		
			SET OutputRoot.Properties.CodedCharSetId 			= 1208;	
			SET OutputRoot.HTTPRequestHeader."Authorization" = Environment.Conn.AuthHeader;
								
			-- If first run, then run query, else run queryMore
			IF Environment.SF.Meta.firstRun = true THEN
				SET Environment.SF.Meta.RequestURL = GetQFOLocation(vHost);
				SET OutputLocalEnvironment.Destination.HTTP.RequestURL = GetQFOLocation(vHost);				
			ELSEIF Environment.SF.Meta.firstRun = false THEN
				SET OutputLocalEnvironment.Destination.HTTP.RequestURL = Environment.SF.Meta.Next;		
			END IF;
			
			PROPAGATE TO TERMINAL 'out';
		
			SET countReq = countReq + 1;	
		END WHILE;	
		
		SET OutputRoot.Properties = InputRoot.Properties;
		
		-- Only run sequencial if it is a trigger message containing that param
		IF (trigList.list.parm[2] = 'Sequential') THEN			
			SET OutputRoot = InputRoot;
			PROPAGATE TO TERMINAL 'out1';		
		END IF;	
									
		RETURN FALSE;
	END;

	CREATE FUNCTION GetQFOLocation(IN vHost CHAR
	) RETURNS CHAR BEGIN			 		
		
		DECLARE vObject CHAR 'FOLocation';
		DECLARE vSelect CHAR '$select=';
		DECLARE vExpand CHAR '$expand=';
		DECLARE vPaging CHAR 'paging=snapshot';
		DECLARE vCustom CHAR 'customPageSize=1000';		
		DECLARE vFormat CHAR '$format=json';	
		
		-- Select
		SET vSelect = vSelect || 'externalCode,';
		SET vSelect = vSelect || 'name,';
		SET vSelect = vSelect || 'timezone,';
		SET vSelect = vSelect || 'status,';
		SET vSelect = vSelect || 'companyFlxNav/externalCode,';
		SET vSelect = vSelect || 'addressNavDEFLT/country,';		
		SET vSelect = vSelect || 'addressNavDEFLT/state,';			
		SET vSelect = vSelect || 'addressNavDEFLT/province,';
		SET vSelect = vSelect || 'addressNavDEFLT/city,';
		SET vSelect = vSelect || 'addressNavDEFLT/zipCode,';			
		SET vSelect = vSelect || 'addressNavDEFLT/address1,';
		SET vSelect = vSelect || 'addressNavDEFLT/address2,';
		SET vSelect = vSelect || 'addressNavDEFLT/address3,';
		SET vSelect = vSelect || 'addressNavDEFLT/address6';
		
		-- Expand
		SET vExpand = vExpand || 'companyFlxNav,';
		SET vExpand = vExpand || 'addressNavDEFLT';		
		
		RETURN vHost || vObject || '?' || vSelect || '&' || vExpand || '&' || vCustom || '&' || vFormat  || '&' || vPaging;
	
	END;
END MODULE;
